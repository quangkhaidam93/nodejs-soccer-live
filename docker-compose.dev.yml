version: '3.8'
services:
  db:
    container_name: db
    image: postgres:14.3-alpine
    restart: always
    user: root
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db:/var/lib/posgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  server:
    container_name: server
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    container_name: server
    command: npm run dev
    depends_on:
      - db
    environment:
      - TOKEN_SECRET=${TOKEN_SECRET}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ./:/usr/app
      - /src/app/node_modules
  migration:
    build: 
      context: .
      dockerfile: Dockerfile.migration
    env_file:
      - .env
    command: ["sh", "-c", "make migration-prepare"]
    depends_on:
      - db
      - server
volumes:
  db:
    driver: local